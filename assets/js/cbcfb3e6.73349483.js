"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[915],{7574:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>u,frontMatter:()=>t,metadata:()=>c,toc:()=>a});var s=i(4848),d=i(8453);const t={sidebar_position:1},l="Simple Types",c={id:"reference/subjekt/types/simple",title:"Simple Types",description:"Simple types represent fundamental data types that can be used to define the properties of states and behaviors within subjects. Each type is designed to handle specific kinds of data, from numeric values to complex cryptographic addresses.",source:"@site/docs/reference/subjekt/types/simple.md",sourceDirName:"reference/subjekt/types",slug:"/reference/subjekt/types/simple",permalink:"/docs/reference/subjekt/types/simple",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"referenceSidebar",previous:{title:"Types",permalink:"/docs/reference/subjekt/types/"},next:{title:"Aggregate Types",permalink:"/docs/reference/subjekt/types/aggregate"}},r={},a=[{value:"<code>address</code>",id:"address",level:2},{value:"<code>blob</code>",id:"blob",level:2},{value:"<code>boolean</code>",id:"boolean",level:2},{value:"<code>byte</code>",id:"byte",level:2},{value:"<code>bytes</code>",id:"bytes",level:2},{value:"<code>document</code>",id:"document",level:2},{value:"<code>double</code>",id:"double",level:2},{value:"<code>float</code>",id:"float",level:2},{value:"<code>int</code>",id:"int",level:2},{value:"<code>int8</code>",id:"int8",level:2},{value:"<code>int16</code>",id:"int16",level:2},{value:"<code>int32</code>",id:"int32",level:2},{value:"<code>int64</code>",id:"int64",level:2},{value:"<code>int128</code>",id:"int128",level:2},{value:"<code>int256</code>",id:"int256",level:2},{value:"<code>none</code>",id:"none",level:2},{value:"<code>string</code>",id:"string",level:2},{value:"<code>timestamp</code>",id:"timestamp",level:2},{value:"<code>uint</code>",id:"uint",level:2},{value:"<code>uint8</code>",id:"uint8",level:2},{value:"<code>uint16</code>",id:"uint16",level:2},{value:"<code>uint32</code>",id:"uint32",level:2},{value:"<code>uint64</code>",id:"uint64",level:2},{value:"<code>uint128</code>",id:"uint128",level:2},{value:"<code>uint256</code>",id:"uint256",level:2}];function o(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"simple-types",children:"Simple Types"}),"\n",(0,s.jsx)(n.p,{children:"Simple types represent fundamental data types that can be used to define the properties of states and behaviors within subjects. Each type is designed to handle specific kinds of data, from numeric values to complex cryptographic addresses."}),"\n",(0,s.jsx)(n.h2,{id:"address",children:(0,s.jsx)(n.code,{children:"address"})}),"\n",(0,s.jsx)(n.p,{children:"Represents Ethereum wallet addresses generated using the Keccak-256 hashing algorithm."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"address walletAddress;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"blob",children:(0,s.jsx)(n.code,{children:"blob"})}),"\n",(0,s.jsx)(n.p,{children:"A blob is uninterpreted binary data."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"blob MyBlob;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"boolean",children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"Represents true or false values."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"boolean isActive;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"byte",children:(0,s.jsx)(n.code,{children:"byte"})}),"\n",(0,s.jsx)(n.p,{children:"A byte is a unit of data that is eight binary digits long."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"byte singleByte;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"bytes",children:(0,s.jsx)(n.code,{children:"bytes"})}),"\n",(0,s.jsx)(n.p,{children:"Bytes refers to a dynamically-sized byte array."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"bytes multipleBytes;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"document",children:(0,s.jsx)(n.code,{children:"document"})}),"\n",(0,s.jsx)(n.p,{children:'A document represents protocol-agnostic open content that functions as a kind of "any" type. Document types are represented by a JSON-like data model and can contain UTF-8 strings, arbitrary precision numbers, booleans, nulls, a list of these values, and a map of UTF-8 strings to these values.'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"document myDocument;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"double",children:(0,s.jsx)(n.code,{children:"double"})}),"\n",(0,s.jsx)(n.p,{children:"A double is a double precision IEEE-754 floating point number."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"double price;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"float",children:(0,s.jsx)(n.code,{children:"float"})}),"\n",(0,s.jsx)(n.p,{children:"A float is a single precision IEEE-754 floating point number."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"float temperature;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"int",children:(0,s.jsx)(n.code,{children:"int"})}),"\n",(0,s.jsx)(n.p,{children:"An integer is a 32-bit signed integer ranging from -2^31 to (2^31)-1 (inclusive)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"int counter;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"int8",children:(0,s.jsx)(n.code,{children:"int8"})}),"\n",(0,s.jsx)(n.p,{children:"An 8-bit signed integer ranging from -128 to 127 (inclusive)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"int8 smallInt;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"int16",children:(0,s.jsx)(n.code,{children:"int16"})}),"\n",(0,s.jsx)(n.p,{children:"A 16-bit signed integer ranging from -32,768 to 32,767 (inclusive)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"int16 mediumInt;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"int32",children:(0,s.jsx)(n.code,{children:"int32"})}),"\n",(0,s.jsx)(n.p,{children:"A 32-bit signed integer ranging from -2^31 to (2^31)-1 (inclusive)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"int32 standardInt;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"int64",children:(0,s.jsx)(n.code,{children:"int64"})}),"\n",(0,s.jsx)(n.p,{children:"A 64-bit signed integer ranging from -2^63 to (2^63)-1 (inclusive)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"int64 largeInt;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"int128",children:(0,s.jsx)(n.code,{children:"int128"})}),"\n",(0,s.jsx)(n.p,{children:"A 128-bit signed integer."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"int128 veryLargeInt;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"int256",children:(0,s.jsx)(n.code,{children:"int256"})}),"\n",(0,s.jsx)(n.p,{children:"A 256-bit signed integer."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"int256 ultraLargeInt;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"none",children:(0,s.jsx)(n.code,{children:"none"})}),"\n",(0,s.jsx)(n.p,{children:"Represents the absence of a value."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"none noValue;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"string",children:(0,s.jsx)(n.code,{children:"string"})}),"\n",(0,s.jsx)(n.p,{children:"A string is UTF-8 encoded text data."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"string name;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"timestamp",children:(0,s.jsx)(n.code,{children:"timestamp"})}),"\n",(0,s.jsx)(n.p,{children:"A timestamp represents an instant in time in the proleptic Gregorian calendar, independent of local times or timezones."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"timestamp createdAt;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"uint",children:(0,s.jsx)(n.code,{children:"uint"})}),"\n",(0,s.jsx)(n.p,{children:"Represents unsigned integer values."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"uint total;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"uint8",children:(0,s.jsx)(n.code,{children:"uint8"})}),"\n",(0,s.jsx)(n.p,{children:"An 8-bit unsigned integer ranging from 0 to 255 (inclusive)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"uint8 smallUnsigned;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"uint16",children:(0,s.jsx)(n.code,{children:"uint16"})}),"\n",(0,s.jsx)(n.p,{children:"A 16-bit unsigned integer ranging from 0 to 65,535 (inclusive)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"uint16 mediumUnsigned;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"uint32",children:(0,s.jsx)(n.code,{children:"uint32"})}),"\n",(0,s.jsx)(n.p,{children:"A 32-bit unsigned integer ranging from 0 to 4,294,967,295 (inclusive)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"uint32 standardUnsigned;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"uint64",children:(0,s.jsx)(n.code,{children:"uint64"})}),"\n",(0,s.jsx)(n.p,{children:"A 64-bit unsigned integer ranging from 0 to 18,446,744,073,709,551,615 (inclusive)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"uint64 largeUnsigned;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"uint128",children:(0,s.jsx)(n.code,{children:"uint128"})}),"\n",(0,s.jsx)(n.p,{children:"A 128-bit unsigned integer."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"uint128 veryLargeUnsigned;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"uint256",children:(0,s.jsx)(n.code,{children:"uint256"})}),"\n",(0,s.jsx)(n.p,{children:"A 256-bit unsigned integer."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"uint256 ultraLargeUnsigned;\n"})})]})}function u(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>c});var s=i(6540);const d={},t=s.createContext(d);function l(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);