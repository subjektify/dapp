"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8581],{5610:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"developSidebar":[{"type":"link","label":"Develop with Subjektify","href":"/docs/develop/","docId":"develop/index","unlisted":false},{"type":"category","label":"Get Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Subjektify in 5 Minutes","href":"/docs/develop/start/in-5-mins","docId":"develop/start/in-5-mins","unlisted":false},{"type":"link","label":"Subjektify for New Developers","href":"/docs/develop/start/new-developer","docId":"develop/start/new-developer","unlisted":false},{"type":"link","label":"Subjektify for Mobile Developers","href":"/docs/develop/start/mobile-developer","docId":"develop/start/mobile-developer","unlisted":false},{"type":"link","label":"Subjektify Tooling in 5 Minutes","href":"/docs/develop/start/tooling-5-mins","docId":"develop/start/tooling-5-mins","unlisted":false}],"href":"/docs/develop/start/"},{"type":"category","label":"Project Configuration","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"What is subjektify.json?","href":"/docs/develop/configuration/json","docId":"develop/configuration/json","unlisted":false}],"href":"/docs/develop/configuration/"},{"type":"category","label":"Tutorials","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Creating a Subject","href":"/docs/develop/tutorials/create-subject","docId":"develop/tutorials/create-subject","unlisted":false}],"href":"/docs/develop/tutorials/"},{"type":"link","label":"Blueprints","href":"/docs/develop/blueprints/","docId":"develop/blueprints/index","unlisted":false},{"type":"link","label":"Plugins","href":"/docs/develop/plugins/","docId":"develop/plugins/index","unlisted":false},{"type":"category","label":"Advanced Topics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Creating Custom Plugins","href":"/docs/develop/advanced/create-plugin","docId":"develop/advanced/create-plugin","unlisted":false}],"href":"/docs/develop/advanced/"},{"type":"link","label":"FAQ","href":"/docs/develop/faq","docId":"develop/faq","unlisted":false},{"type":"category","label":"Reference","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Namespaces","href":"/docs/develop/reference/namespaces","docId":"develop/reference/namespaces","unlisted":false}],"href":"/docs/develop/reference/"}],"handbookSidebar":[{"type":"link","label":"The Subjektify Handbook","href":"/docs/handbook/","docId":"handbook/index","unlisted":false}],"subjektSidebar":[{"type":"link","label":"Subjekt","href":"/docs/subjekt/","docId":"subjekt/index","unlisted":false},{"type":"link","label":"Quick Start","href":"/docs/subjekt/start","docId":"subjekt/start","unlisted":false},{"type":"category","label":"Subjekt Specification","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"The Subjekt Model","href":"/docs/subjekt/specification/model","docId":"subjekt/specification/model","unlisted":false},{"type":"category","label":"Types","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Aggregate Types","href":"/docs/subjekt/specification/types/aggregate","docId":"subjekt/specification/types/aggregate","unlisted":false},{"type":"link","label":"Simple Types","href":"/docs/subjekt/specification/types/simple","docId":"subjekt/specification/types/simple","unlisted":false},{"type":"link","label":"Subject Types","href":"/docs/subjekt/specification/types/subject","docId":"subjekt/specification/types/subject","unlisted":false}],"href":"/docs/subjekt/specification/types/"},{"type":"category","label":"Traits","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Behavior Traits","href":"/docs/subjekt/specification/traits/behavior","docId":"subjekt/specification/traits/behavior","unlisted":false},{"type":"link","label":"Constraint Traits","href":"/docs/subjekt/specification/traits/constraint","docId":"subjekt/specification/traits/constraint","unlisted":false},{"type":"link","label":"Documentation Traits","href":"/docs/subjekt/specification/traits/documentation","docId":"subjekt/specification/traits/documentation","unlisted":false},{"type":"link","label":"Type Refinement Traits","href":"/docs/subjekt/specification/traits/refinement","docId":"subjekt/specification/traits/refinement","unlisted":false},{"type":"link","label":"Subject Traits","href":"/docs/subjekt/specification/traits/subject","docId":"subjekt/specification/traits/subject","unlisted":false}],"href":"/docs/subjekt/specification/traits/"},{"type":"link","label":"Subjekt Grammar","href":"/docs/subjekt/specification/grammar","docId":"subjekt/specification/grammar","unlisted":false},{"type":"link","label":"JSON AST","href":"/docs/subjekt/specification/ast","docId":"subjekt/specification/ast","unlisted":false}],"href":"/docs/subjekt/specification/"},{"type":"link","label":"Cheat Sheets","href":"/docs/subjekt/cheatsheets","docId":"subjekt/cheatsheets","unlisted":false},{"type":"link","label":"Model Validation","href":"/docs/subjekt/validation","docId":"subjekt/validation","unlisted":false}]},"docs":{"develop/advanced/create-plugin":{"id":"develop/advanced/create-plugin","title":"Creating Custom Plugins","description":"","sidebar":"developSidebar"},"develop/advanced/index":{"id":"develop/advanced/index","title":"Advanced Topics","description":"","sidebar":"developSidebar"},"develop/blueprints/index":{"id":"develop/blueprints/index","title":"Blueprints","description":"","sidebar":"developSidebar"},"develop/configuration/index":{"id":"develop/configuration/index","title":"Project Configuration","description":"Quick introductions based on your background or preference.","sidebar":"developSidebar"},"develop/configuration/json":{"id":"develop/configuration/json","title":"What is subjektify.json?","description":"Building a Subjekt model requires constructing a configuration file, subjektify.json. This file is used to describe how a model is created and what projections of the model to create.","sidebar":"developSidebar"},"develop/faq":{"id":"develop/faq","title":"FAQ","description":"Why did you develop Subjektify?","sidebar":"developSidebar"},"develop/index":{"id":"develop/index","title":"Develop with Subjektify","description":"Welcome to the comprehensive development guide for Subjektify, your go-to toolkit for building decentralized applications (dApps) with a focus on efficiency, flexibility, and robustness. This guide is intended to serve as your foundational resource for understanding and leveraging the extensive features and capabilities that Subjektify offers. Whether you\'re a seasoned blockchain developer or new to the dApp landscape, this guide will equip you with the knowledge and tools you need to build scalable and secure decentralized applications.","sidebar":"developSidebar"},"develop/plugins/index":{"id":"develop/plugins/index","title":"Plugins","description":"","sidebar":"developSidebar"},"develop/reference/index":{"id":"develop/reference/index","title":"Reference","description":"Quick introductions based on your background or preference.","sidebar":"developSidebar"},"develop/reference/namespaces":{"id":"develop/reference/namespaces","title":"Namespaces","description":"","sidebar":"developSidebar"},"develop/start/in-5-mins":{"id":"develop/start/in-5-mins","title":"Subjektify in 5 Minutes","description":"Welcome to Subjektify! We\'re here to redefine the way decentralized applications (dApps) are built. If you\'re looking to create robust, modular, and highly scalable smart contracts with minimal effort, you\'re in the right place.","sidebar":"developSidebar"},"develop/start/index":{"id":"develop/start/index","title":"Get Started","description":"Quick introductions based on your background or preference.","sidebar":"developSidebar"},"develop/start/mobile-developer":{"id":"develop/start/mobile-developer","title":"Subjektify for Mobile Developers","description":"","sidebar":"developSidebar"},"develop/start/new-developer":{"id":"develop/start/new-developer","title":"Subjektify for New Developers","description":"Welcome to the beginner\'s guide to Subjektify. If you\'re new to the world of decentralized applications (dApps) and blockchain, you\'re in the right place. This guide aims to break down complex topics into digestible pieces, helping you understand how Subjektify can make your journey into dApp development easier and more enjoyable.","sidebar":"developSidebar"},"develop/start/tooling-5-mins":{"id":"develop/start/tooling-5-mins","title":"Subjektify Tooling in 5 Minutes","description":"","sidebar":"developSidebar"},"develop/tutorials/create-subject":{"id":"develop/tutorials/create-subject","title":"Creating a Subject","description":"","sidebar":"developSidebar"},"develop/tutorials/index":{"id":"develop/tutorials/index","title":"Tutorials","description":"","sidebar":"developSidebar"},"guides/index":{"id":"guides/index","title":"index","description":""},"handbook/index":{"id":"handbook/index","title":"The Subjektify Handbook","description":"Welcome to the Subjektify Handbook, your definitive guide to understanding and working with the Subjektify framework.","sidebar":"handbookSidebar"},"index":{"id":"index","title":"Subjektify Documentation","description":"Welcome to the development documentation of Subjektify. Here, you\'ll find a wide range of resources aimed at helping you understand, configure, and extend Subjektify for your decentralized application needs."},"intro":{"id":"intro","title":"Tutorial Intro","description":"Let\'s discover Docusaurus in less than 5 minutes."},"learn/index":{"id":"learn/index","title":"index","description":""},"learn/subject/design":{"id":"learn/subject/design","title":"design","description":""},"subjekt/cheatsheets":{"id":"subjekt/cheatsheets","title":"Cheat Sheets","description":"","sidebar":"subjektSidebar"},"subjekt/index":{"id":"subjekt/index","title":"Subjekt","description":"Subjekt is a protocol-agnostic, declarative language designed for defining subjects, smart contracts, and SDKs.","sidebar":"subjektSidebar"},"subjekt/specification/ast":{"id":"subjekt/specification/ast","title":"JSON AST","description":"Models written using the Subjekt IDL have an isomorphic JSON abstract syntax tree (AST) representation that can be used to more easily integrate Subjekt into languages and tools that do not have a Subjekt IDL parser.","sidebar":"subjektSidebar"},"subjekt/specification/grammar":{"id":"subjekt/specification/grammar","title":"Subjekt Grammar","description":"Subjekt models are defined using either the Subjekt interface definition language (IDL) or the JSON abstract syntax tree (AST). This document defines the syntax and ABNF grammar for defining models using the Subjekt IDL.","sidebar":"subjektSidebar"},"subjekt/specification/index":{"id":"subjekt/specification/index","title":"Subjekt Specification","description":"This is the specification of the Subjekt interface definition language, it includes the theoritical definition of the lanuage as well as usage examples per topic.","sidebar":"subjektSidebar"},"subjekt/specification/model":{"id":"subjekt/specification/model","title":"The Subjekt Model","description":"The Subjekt model describes the Subjekt semantic model and the files used to create it. Subjekt models are used to describe contracts, subjects and data structures.This model can be represented in various forms, including as a semantic model, through the Interface Definition Language (IDL), and as an Abstract Syntax Tree (AST) in JSON format.","sidebar":"subjektSidebar"},"subjekt/specification/traits/behavior":{"id":"subjekt/specification/traits/behavior","title":"Behavior Traits","description":"Behavior traits are traits that significantly refine, or change, the type of a behavior.","sidebar":"subjektSidebar"},"subjekt/specification/traits/constraint":{"id":"subjekt/specification/traits/constraint","title":"Constraint Traits","description":"Constraint traits are used to constrain the values that can be provided for a shape. Constraint traits are for validation only and SHOULD NOT impact the types signatures of generated code.","sidebar":"subjektSidebar"},"subjekt/specification/traits/documentation":{"id":"subjekt/specification/traits/documentation","title":"Documentation Traits","description":"Documentation traits describe shapes in the model in a way that does not materially affect the semantics of the model.","sidebar":"subjektSidebar"},"subjekt/specification/traits/index":{"id":"subjekt/specification/traits/index","title":"Traits","description":"Diving into the Traits section, you\'ll discover the modular characteristics and behaviors that subjects within the Grams framework can adopt. Traits are like building blocks, allowing developers to mix and match functionalities as per their requirements. They define specific behaviors or characteristics that a subject can embody and are often mapped to corresponding Solidity constructs. This directory ensures that developers have a repository of reusable, standardized behaviors, streamlining the development process and ensuring best practices are adhered to.","sidebar":"subjektSidebar"},"subjekt/specification/traits/refinement":{"id":"subjekt/specification/traits/refinement","title":"Type Refinement Traits","description":"Type refinement traits are traits that significantly refine, or change, the type of a shape.","sidebar":"subjektSidebar"},"subjekt/specification/traits/subject":{"id":"subjekt/specification/traits/subject","title":"Subject Traits","description":"","sidebar":"subjektSidebar"},"subjekt/specification/types/aggregate":{"id":"subjekt/specification/types/aggregate","title":"Aggregate Types","description":"Aggregate types contain configurable member references to others shapes.","sidebar":"subjektSidebar"},"subjekt/specification/types/index":{"id":"subjekt/specification/types/index","title":"Types","description":"The Types section houses the fundamental data structures and data types integral to the Grams Subject Model. These types align with standard Ethereum and web3 conventions, ensuring seamless integration and interoperability. Inside, you\'ll find definitions that range from Ethereum addresses to large integers, encapsulating the diverse range of data structures needed for decentralized applications. By centralizing these type definitions, the Grams framework ensures consistency and clarity across all subjects.","sidebar":"subjektSidebar"},"subjekt/specification/types/simple":{"id":"subjekt/specification/types/simple","title":"Simple Types","description":"Simple types in Subjekt IDL represent fundamental data types that can be used to define the properties of states and behaviors within subjects. Each type is designed to handle specific kinds of data, from numeric values to complex cryptographic addresses.","sidebar":"subjektSidebar"},"subjekt/specification/types/subject":{"id":"subjekt/specification/types/subject","title":"Subject Types","description":"Subject types define various components within the Subject-Oriented Programming (SOP) framework, each serving distinct roles within the subject\'s lifecycle and interactions.","sidebar":"subjektSidebar"},"subjekt/start":{"id":"subjekt/start","title":"Quick Start","description":"This document is a tutorial that introduces the Subjekt interface definition language (IDL). By reading this tutorial, you will learn:","sidebar":"subjektSidebar"},"subjekt/validation":{"id":"subjekt/validation","title":"Model Validation","description":"","sidebar":"subjektSidebar"},"tools/index":{"id":"tools/index","title":"index","description":""}}}')}}]);