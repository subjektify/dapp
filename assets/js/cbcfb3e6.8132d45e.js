"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[915],{1955:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>t,default:()=>h,frontMatter:()=>c,metadata:()=>l,toc:()=>a});var s=i(4848),d=i(8453);const c={},t="Simple Types",l={id:"reference/subjekt/types/simple",title:"Simple Types",description:"Simple types represent fundamental data types that can be used to define the properties of states and behaviors within subjects. Each type is designed to handle specific kinds of data, from numeric values to complex cryptographic addresses.",source:"@site/docs/reference/subjekt/types/simple.md",sourceDirName:"reference/subjekt/types",slug:"/reference/subjekt/types/simple",permalink:"/docs/reference/subjekt/types/simple",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"referenceSidebar",previous:{title:"Aggregate Types",permalink:"/docs/reference/subjekt/types/aggregate"},next:{title:"Subject Types",permalink:"/docs/reference/subjekt/types/subject"}},r={},a=[{value:"<code>address</code>",id:"address",level:3},{value:"<code>bigDecimal</code>",id:"bigdecimal",level:3},{value:"<code>bigInteger</code>",id:"biginteger",level:3},{value:"<code>blob</code>",id:"blob",level:3},{value:"<code>boolean</code>",id:"boolean",level:3},{value:"<code>byte</code>",id:"byte",level:3},{value:"<code>document</code>",id:"document",level:3},{value:"<code>double</code>",id:"double",level:3},{value:"<code>enum</code>",id:"enum",level:2},{value:"<code>float</code>",id:"float",level:3},{value:"<code>hash256</code>",id:"hash256",level:3},{value:"<code>hash512</code>",id:"hash512",level:3},{value:"<code>int</code>",id:"int",level:3},{value:"<code>int8</code>, <code>int16</code>, <code>int32</code>, <code>int64</code>, <code>int128</code>, <code>int256</code>",id:"intx",level:3},{value:"<code>long</code>",id:"long",level:3},{value:"<code>none</code>",id:"none",level:3},{value:"<code>short</code>",id:"short",level:3},{value:"<code>string</code>",id:"string",level:3},{value:"<code>timestamp</code>",id:"timestamp",level:3},{value:"<code>uint</code>",id:"uint",level:3},{value:"<code>uint8</code>, <code>uint16</code>, <code>uint32</code>, <code>uint64</code>, <code>uint128</code>, <code>uint256</code>",id:"uintx",level:3}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"simple-types",children:"Simple Types"}),"\n",(0,s.jsx)(n.p,{children:"Simple types represent fundamental data types that can be used to define the properties of states and behaviors within subjects. Each type is designed to handle specific kinds of data, from numeric values to complex cryptographic addresses."}),"\n",(0,s.jsx)(n.h3,{id:"address",children:(0,s.jsx)(n.code,{children:"address"})}),"\n",(0,s.jsx)(n.p,{children:"Represents Ethereum wallet addresses generated using the Keccak-256 hashing algorithm."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"address walletAddress\n"})}),"\n",(0,s.jsx)(n.h3,{id:"bigdecimal",children:(0,s.jsx)(n.code,{children:"bigDecimal"})}),"\n",(0,s.jsx)(n.p,{children:"A bigDecimal is an arbitrary precision signed decimal number."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"bigDecimal amount\n"})}),"\n",(0,s.jsx)(n.h3,{id:"biginteger",children:(0,s.jsx)(n.code,{children:"bigInteger"})}),"\n",(0,s.jsx)(n.p,{children:"A bigInteger is an arbitrarily large signed integer."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"bigInteger largeNumber\n"})}),"\n",(0,s.jsx)(n.h3,{id:"blob",children:(0,s.jsx)(n.code,{children:"blob"})}),"\n",(0,s.jsx)(n.p,{children:"A blob is uninterpreted binary data."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"blob MyBlob\n"})}),"\n",(0,s.jsx)(n.h3,{id:"boolean",children:(0,s.jsx)(n.code,{children:"boolean"})}),"\n",(0,s.jsx)(n.p,{children:"Represents true or false values."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"boolean isActive\n"})}),"\n",(0,s.jsx)(n.h3,{id:"byte",children:(0,s.jsx)(n.code,{children:"byte"})}),"\n",(0,s.jsx)(n.p,{children:"A byte is an 8-bit signed integer ranging from -128 to 127 (inclusive)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"byte singleByte\n"})}),"\n",(0,s.jsx)(n.h3,{id:"document",children:(0,s.jsx)(n.code,{children:"document"})}),"\n",(0,s.jsx)(n.p,{children:'A document represents protocol-agnostic open content that functions as a kind of "any" type. Document types are represented by a JSON-like data model and can contain UTF-8 strings, arbitrary precision numbers, booleans, nulls, a list of these values, and a map of UTF-8 strings to these values.'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"document myDocument\n"})}),"\n",(0,s.jsx)(n.h3,{id:"double",children:(0,s.jsx)(n.code,{children:"double"})}),"\n",(0,s.jsx)(n.p,{children:"A double is a double precision IEEE-754 floating point number."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"double price;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"enum",children:(0,s.jsx)(n.code,{children:"enum"})}),"\n",(0,s.jsx)(n.p,{children:"Enums are considered open, meaning it is a backward compatible change to add new members. Previously generated clients MUST NOT fail when they encounter an unknown enum value. Client implementations MUST provide the capability of sending and receiving unknown enum values."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'enum Suit {\n    DIAMOND\n    CLUB\n    HEART = "HEART"\n    SPADE = "SPADE"\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"float",children:(0,s.jsx)(n.code,{children:"float"})}),"\n",(0,s.jsx)(n.p,{children:"A float is a single precision IEEE-754 floating point number."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"float temperature;\n"})}),"\n",(0,s.jsx)(n.h3,{id:"hash256",children:(0,s.jsx)(n.code,{children:"hash256"})}),"\n",(0,s.jsx)(n.p,{children:"Represents a 256-bit hash value, typically used in cryptographic operations."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"hash256 transactionHash;\n"})}),"\n",(0,s.jsx)(n.h3,{id:"hash512",children:(0,s.jsx)(n.code,{children:"hash512"})}),"\n",(0,s.jsx)(n.p,{children:"Represents a 512-bit hash value for enhanced cryptographic security."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"hash512 secureHash;\n"})}),"\n",(0,s.jsx)(n.h3,{id:"int",children:(0,s.jsx)(n.code,{children:"int"})}),"\n",(0,s.jsx)(n.p,{children:"An integer is a 32-bit signed integer ranging from -2^31 to (2^31)-1 (inclusive)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"int counter;\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"intx",children:[(0,s.jsx)(n.code,{children:"int8"}),", ",(0,s.jsx)(n.code,{children:"int16"}),", ",(0,s.jsx)(n.code,{children:"int32"}),", ",(0,s.jsx)(n.code,{children:"int64"}),", ",(0,s.jsx)(n.code,{children:"int128"}),", ",(0,s.jsx)(n.code,{children:"int256"})]}),"\n",(0,s.jsx)(n.p,{children:"Represent signed integers of different bit sizes."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"int8 smallInt;\nint16 mediumInt;\nint32 standardInt;\nint64 largeInt;\nint128 veryLargeInt;\nint256 ultraLargeInt;\n"})}),"\n",(0,s.jsx)(n.h3,{id:"long",children:(0,s.jsx)(n.code,{children:"long"})}),"\n",(0,s.jsx)(n.p,{children:"A long is a 64-bit signed integer ranging from -2^63 to (2^63)-1 (inclusive)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"long bigCount;\n"})}),"\n",(0,s.jsx)(n.h3,{id:"none",children:(0,s.jsx)(n.code,{children:"none"})}),"\n",(0,s.jsx)(n.p,{children:"Represents the absence of a value."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"none noValue;\n"})}),"\n",(0,s.jsx)(n.h3,{id:"short",children:(0,s.jsx)(n.code,{children:"short"})}),"\n",(0,s.jsx)(n.p,{children:"A short is a 16-bit signed integer ranging from -32,768 to 32,767 (inclusive)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"short smallCount;\n"})}),"\n",(0,s.jsx)(n.h3,{id:"string",children:(0,s.jsx)(n.code,{children:"string"})}),"\n",(0,s.jsx)(n.p,{children:"A string is UTF-8 encoded text data."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"string name;\n"})}),"\n",(0,s.jsx)(n.h3,{id:"timestamp",children:(0,s.jsx)(n.code,{children:"timestamp"})}),"\n",(0,s.jsx)(n.p,{children:"A timestamp represents an instant in time in the proleptic Gregorian calendar, independent of local times or timezones."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"timestamp createdAt;\n"})}),"\n",(0,s.jsx)(n.h3,{id:"uint",children:(0,s.jsx)(n.code,{children:"uint"})}),"\n",(0,s.jsx)(n.p,{children:"Represents unsigned integer values."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"uint total;\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"uintx",children:[(0,s.jsx)(n.code,{children:"uint8"}),", ",(0,s.jsx)(n.code,{children:"uint16"}),", ",(0,s.jsx)(n.code,{children:"uint32"}),", ",(0,s.jsx)(n.code,{children:"uint64"}),", ",(0,s.jsx)(n.code,{children:"uint128"}),", ",(0,s.jsx)(n.code,{children:"uint256"})]}),"\n",(0,s.jsx)(n.p,{children:"Represent unsigned integers of different bit sizes."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-subjekt",children:"uint8 smallUnsigned;\nuint16 mediumUnsigned;\nuint32 standardUnsigned;\nuint64 largeUnsigned;\nuint128 veryLargeUnsigned;\nuint256 ultraLargeUnsigned;\n"})})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>l});var s=i(6540);const d={},c=s.createContext(d);function t(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:t(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);