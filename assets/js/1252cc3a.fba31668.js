"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1281],{5559:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>c,toc:()=>d});var i=t(4848),s=t(8453),r=t(1470),a=t(9365);const l={sidebar_position:4},o="Using Subjektify",c={id:"learn/subjektify/index",title:"Using Subjektify",description:"Subjektify offers a flexible toolkit that runs tasks to build, compile, and deploy decentralized applications, ensuring you can focus on innovation and functionality. At its core, Subjektify is a task runner built for modularity and pluggability. It provides a toolkit that includes all the essential plugins used throughout the development lifecycle.",source:"@site/docs/learn/subjektify/index.md",sourceDirName:"learn/subjektify",slug:"/learn/subjektify/",permalink:"/docs/learn/subjektify/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"learnSidebar",previous:{title:"6. Final notes",permalink:"/docs/learn/tutorial/notes"},next:{title:"Using Blueprints",permalink:"/docs/learn/subjektify/blueprints"}},u={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setting Up a New Project",id:"setting-up-a-new-project",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Configuration Details",id:"configuration-details",level:3},{value:"Designing Subjects",id:"designing-subjects",level:2},{value:"Next Steps",id:"next-steps",level:2},{value:"Using Blueprints",id:"using-blueprints",level:3},{value:"Building the Model",id:"building-the-model",level:3},{value:"Code Generation",id:"code-generation",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"using-subjektify",children:"Using Subjektify"}),"\n",(0,i.jsxs)(n.p,{children:["Subjektify offers a flexible toolkit that runs tasks to build, compile, and deploy decentralized applications, ensuring you can focus on innovation and functionality. At its core, Subjektify is a task runner built for modularity and pluggability. It provides a ",(0,i.jsx)(n.a,{href:"https://www.npmjs.com/package/@subjektifylabs/subjektify-toolbox",children:"toolkit"})," that includes all the essential plugins used throughout the development lifecycle."]}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsx)(n.p,{children:"Before you start using Subjektify, ensure you have the following installed:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Node.js"})," (>=18.0)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"npm"}),", ",(0,i.jsx)(n.strong,{children:"Yarn"}),", or ",(0,i.jsx)(n.strong,{children:"pnpm"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Subjektify CLI"}),": You can install it in your project using:"]}),"\n"]}),"\n",(0,i.jsxs)(r.A,{children:[(0,i.jsx)(a.A,{value:"npm",label:"npm",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install -D subjektify @subjektifylabs/subjektify-toolbox\n"})})}),(0,i.jsx)(a.A,{value:"yarn",label:"Yarn",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"yarn add --dev subjektify @subjektifylabs/subjektify-toolbox\n"})})}),(0,i.jsx)(a.A,{value:"pnpm",label:"pnpm",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pnpm install -D subjektify @subjektifylabs/subjektify-toolbox\n"})})})]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://www.npmjs.com/package/@subjektifylabs/subjektify-toolbox",children:(0,i.jsx)(n.code,{children:"@subjektifylabs/subjektify-toolbox"})})," contains all the essential plugins you need to get started with dApp development."]})}),"\n",(0,i.jsx)(n.h2,{id:"setting-up-a-new-project",children:"Setting Up a New Project"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Initialize a New Project"}),": Start by creating a new directory for your project and initializing it with Subjektify."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"mkdir my-dapp\ncd my-dapp\nnpx subjektify init my-dapp\n"})}),"\n",(0,i.jsxs)(n.p,{children:["You can also initialize Subjektify in an existing project by running the ",(0,i.jsx)(n.code,{children:"init"})," command in the project's root directory."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd existing-project\nnpx subjektify init existing-project\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Understanding the Project Structure"}),": After initialization, your project will have the following structure:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"my-dapp/\n\u251c\u2500\u2500 package.json                # Project metadata and dependencies\n\u251c\u2500\u2500 subjektify.config.ts        # Configuration for Subjektify\n\u251c\u2500\u2500 subjects/                   # Directory containing Subjekt model definitions\n\u2502   \u2514\u2500\u2500 mySubject.subjekt       # Example Subjekt model file\n\u2514\u2500\u2500 ...\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"package.json"})}),": This file contains metadata about your project, including dependencies and scripts."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"subjektify.config.ts"})}),": This is the main configuration file for Subjektify, where you define your namespace, version, license, and other settings."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"subjects/"})}),": This directory holds your Subjekt model definitions. Each ",(0,i.jsx)(n.code,{children:".subjekt"})," file represents a subject, which defines the states, behaviors, and interactions within your application."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsxs)(n.p,{children:["The core of your project configuration is the ",(0,i.jsx)(n.code,{children:"subjektify.config.(js|ts)"})," file. Here, you define your namespace, version, license, and other essential configurations."]}),"\n",(0,i.jsxs)(r.A,{children:[(0,i.jsx)(a.A,{value:"js",label:"JavaScript",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",metastring:'title="subjektify.config.js"',children:'module.exports = {\n    namespace: "my.dapp",\n    version: "1.0.0",\n    license: "MIT",\n    build: {\n        sources: ["subjects"],\n        outputDirectory: "artifacts"\n    },\n    codegen: [\n        {\n            target: "contract",\n            language: "solidity"\n        },\n        {\n            target: "client",\n            language: "typescript"\n        }\n    ]\n}\n'})})}),(0,i.jsx)(a.A,{value:"ts",label:"TypeScript",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'title="subjektify.config.ts"',children:'import { SubjektifyConfig } from \'subjektify\';\n\nconst config: SubjektifyConfig = {\n    namespace: "my.dapp",\n    version: "1.0.0",\n    license: "MIT",\n    build: {\n        sources: ["subjects"],\n        outputDirectory: "artifacts"\n    },\n    codegen: [\n        {\n            target: "contract",\n            language: "solidity"\n        },\n        {\n            target: "client",\n            language: "typescript"\n        }\n    ]\n};\n\nexport default config;\n'})})})]}),"\n",(0,i.jsx)(n.h3,{id:"configuration-details",children:"Configuration Details"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"namespace"})}),": This defines the unique namespace for your project, which will be used in metadata and Subjekt model referencing. This is essential for organizing your project within Subjektify's ecosystem."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"version"})}),": This is the version of your namespace, following ",(0,i.jsx)(n.a,{href:"https://semver.org/",children:"Semantic Versioning"}),". It helps in managing different versions of your project over time."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"license"})}),": Specifies the license under which your project is distributed. Using an ",(0,i.jsx)(n.a,{href:"https://spdx.org/licenses/",children:"SPDX license identifier"})," helps to clearly communicate the legal terms under which your code can be used."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"build"})}),": This section configures the build process for your project."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"sources"})}),": An array of relative file paths or directories that contain Subjekt models. These paths will be used by Subjektify to locate and process your model definitions."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"outputDirectory"})}),": The directory where build artifacts will be written. This can include generated code, compiled outputs, and other build artifacts."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"codegen"})}),": This section defines the code generation targets and languages."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"target"})}),": Specifies the type of code to generate (e.g., ",(0,i.jsx)(n.code,{children:"contract"}),", ",(0,i.jsx)(n.code,{children:"client"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"language"})}),": Specifies the programming language for the generated code (e.g., ",(0,i.jsx)(n.code,{children:"solidity"}),", ",(0,i.jsx)(n.code,{children:"typescript"}),")."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"This configuration file is crucial for defining how Subjektify will process and manage your project, ensuring everything is organized and set up correctly for your development workflow."}),"\n",(0,i.jsx)(n.h2,{id:"designing-subjects",children:"Designing Subjects"}),"\n",(0,i.jsxs)(n.p,{children:["Subjects are the core components of your dApp. They define the states, behaviors, and interactions within your application. Create and define your subjects in ",(0,i.jsx)(n.code,{children:".subjekt"})," files located in the ",(0,i.jsx)(n.code,{children:"subjects/"})," directory. You can learn more about ",(0,i.jsx)(n.a,{href:"/docs/learn/subjekt",children:"Subjekt here"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-subjekt",metastring:'title="MyToken.subjekt"',children:"subject MyToken {\n    states: [\n        balance: map(address, uint256)\n    ],\n    behaviors: [\n        transfer(from: address, to: address, amount: uint256)\n    ]\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsx)(n.h3,{id:"using-blueprints",children:"Using Blueprints"}),"\n",(0,i.jsx)(n.p,{children:"Blueprints are reusable templates that can help you kickstart your project by providing predefined structures and configurations. You can use blueprints to save time and ensure best practices are followed in your project setup."}),"\n",(0,i.jsx)(n.h3,{id:"building-the-model",children:"Building the Model"}),"\n",(0,i.jsx)(n.p,{children:"Run the build process to parse, validate, and compile your Subjekt models. This will generate the necessary artifacts based on your configuration."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npx subjektify build\n"})}),"\n",(0,i.jsx)(n.h3,{id:"code-generation",children:"Code Generation"}),"\n",(0,i.jsx)(n.p,{children:"Subjektify can generate code for various targets, such as smart contracts and clients. Use the codegen task to generate the required code for your dApp."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npx subjektify codegen\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},9365:(e,n,t)=>{t.d(n,{A:()=>a});t(6540);var i=t(4164);const s={tabItem:"tabItem_Ymn6"};var r=t(4848);function a(e){let{children:n,hidden:t,className:a}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,i.A)(s.tabItem,a),hidden:t,children:n})}},1470:(e,n,t)=>{t.d(n,{A:()=>v});var i=t(6540),s=t(4164),r=t(3104),a=t(6347),l=t(205),o=t(7485),c=t(1682),u=t(679);function d(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:i,default:s}}=e;return{value:n,label:t,attributes:i,default:s}}))}(t);return function(e){const n=(0,c.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function j(e){let{queryString:n=!1,groupId:t}=e;const s=(0,a.W6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o.aZ)(r),(0,i.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(s.location.search);n.set(r,e),s.replace({...s.location,search:n.toString()})}),[r,s])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,r=h(e),[a,o]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=t.find((e=>e.default))??t[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:r}))),[c,d]=j({queryString:t,groupId:s}),[f,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,r]=(0,u.Dv)(t);return[s,(0,i.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:s}),g=(()=>{const e=c??f;return p({value:e,tabValues:r})?e:null})();(0,l.A)((()=>{g&&o(g)}),[g]);return{selectedValue:a,selectValue:(0,i.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);o(e),d(e),b(e)}),[d,b,r]),tabValues:r}}var b=t(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(4848);function y(e){let{className:n,block:t,selectedValue:i,selectValue:a,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.a_)(),u=e=>{const n=e.currentTarget,t=o.indexOf(n),s=l[t].value;s!==i&&(c(n),a(s))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>o.push(e),onKeyDown:d,onClick:u,...r,className:(0,s.A)("tabs__item",g.tabItem,r?.className,{"tabs__item--active":i===n}),children:t??n},n)}))})}function m(e){let{lazy:n,children:t,selectedValue:s}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===s));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function k(e){const n=f(e);return(0,x.jsxs)("div",{className:(0,s.A)("tabs-container",g.tabList),children:[(0,x.jsx)(y,{...n,...e}),(0,x.jsx)(m,{...n,...e})]})}function v(e){const n=(0,b.A)();return(0,x.jsx)(k,{...e,children:d(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var i=t(6540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);