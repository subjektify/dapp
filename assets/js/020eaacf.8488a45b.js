"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9665],{6122:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>o});var i=n(4848),s=n(8453);const r={sidebar_position:3},a="2. Designing Subjects",l={id:"learn/tutorial/design",title:"2. Designing Subjects",description:"In this tutorial, we will design the subjects for our personal tree application. We will define the states and behaviors that will dictate how our virtual tree grows and interacts with users.",source:"@site/docs/learn/tutorial/design.md",sourceDirName:"learn/tutorial",slug:"/learn/tutorial/design",permalink:"/docs/learn/tutorial/design",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"learnSidebar",previous:{title:"1. Creating a Namespace",permalink:"/docs/learn/tutorial/create"},next:{title:"3. Testing Subjects",permalink:"/docs/learn/tutorial/test"}},h={},o=[{value:"Step 1: Understanding Subjects",id:"step-1-understanding-subjects",level:2},{value:"Step 2: Define the Tree Subject",id:"step-2-define-the-tree-subject",level:2},{value:"Create the Tree.subjekt File",id:"create-the-treesubjekt-file",level:3},{value:"Define the Tree Subject",id:"define-the-tree-subject",level:3},{value:"Define the Tree State",id:"define-the-tree-state",level:3},{value:"Define the Grow Behavior",id:"define-the-grow-behavior",level:3},{value:"Define the Planting Behavior",id:"define-the-planting-behavior",level:3},{value:"Define the Water Behavior",id:"define-the-water-behavior",level:3},{value:"Complete Tree.subjekt File",id:"complete-treesubjekt-file",level:3},{value:"Step 3: Verify Your Subject Definition",id:"step-3-verify-your-subject-definition",level:2},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"2-designing-subjects",children:"2. Designing Subjects"}),"\n",(0,i.jsx)(t.p,{children:"In this tutorial, we will design the subjects for our personal tree application. We will define the states and behaviors that will dictate how our virtual tree grows and interacts with users."}),"\n",(0,i.jsx)(t.h2,{id:"step-1-understanding-subjects",children:"Step 1: Understanding Subjects"}),"\n",(0,i.jsx)(t.p,{children:"In Subjektify, a subject is a core component that defines a specific entity within your application. Each subject can have states (attributes), behaviors (functions), and relationships with other subjects."}),"\n",(0,i.jsx)(t.h2,{id:"step-2-define-the-tree-subject",children:"Step 2: Define the Tree Subject"}),"\n",(0,i.jsxs)(t.p,{children:["We will start by defining a ",(0,i.jsx)(t.code,{children:"Tree"})," subject. This subject will have states like ",(0,i.jsx)(t.code,{children:"age"}),", ",(0,i.jsx)(t.code,{children:"height"}),", and ",(0,i.jsx)(t.code,{children:"health"}),", and behaviors like ",(0,i.jsx)(t.code,{children:"grow"}),", ",(0,i.jsx)(t.code,{children:"water"}),", and ",(0,i.jsx)(t.code,{children:"fertilize"}),"."]}),"\n",(0,i.jsx)(t.h3,{id:"create-the-treesubjekt-file",children:"Create the Tree.subjekt File"}),"\n",(0,i.jsxs)(t.p,{children:["Create a new file named ",(0,i.jsx)(t.code,{children:"Tree.subjekt"})," inside the ",(0,i.jsx)(t.code,{children:"subjects"})," directory."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"cd subjects\ntouch Tree.subjekt\n"})}),"\n",(0,i.jsx)(t.h3,{id:"define-the-tree-subject",children:"Define the Tree Subject"}),"\n",(0,i.jsxs)(t.p,{children:["First, we define the ",(0,i.jsx)(t.code,{children:"Tree"})," subject with its states and behaviors."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-subjekt",metastring:'title="Tree.subjekt"',children:"subject Tree {\n    states: [\n        TreeState\n    ]\n    behaviors: [\n        Grow,\n        Water,\n        Plant\n    ]\n}\n"})}),"\n",(0,i.jsx)(t.h3,{id:"define-the-tree-state",children:"Define the Tree State"}),"\n",(0,i.jsxs)(t.p,{children:["Define the states for the ",(0,i.jsx)(t.code,{children:"Tree"})," subject."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-subjekt",metastring:'title="Tree.subjekt"',children:"state TreeState {\n    id: string\n    age: int\n    height: float\n    health: string\n}\n"})}),"\n",(0,i.jsx)(t.h3,{id:"define-the-grow-behavior",children:"Define the Grow Behavior"}),"\n",(0,i.jsx)(t.p,{children:"Define the behavior for growing the tree."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-subjekt",metastring:'title="Tree.subjekt"',children:'behavior Grow {\n    inputs: [\n        {\n            name: "growthAmount",\n            type: float\n        }\n    ]\n    outputs: [\n        {\n            name: "newHeight",\n            type: float\n        }\n    ]\n    triggers: []\n}\n'})}),"\n",(0,i.jsx)(t.h3,{id:"define-the-planting-behavior",children:"Define the Planting Behavior"}),"\n",(0,i.jsx)(t.p,{children:"Define the behavior for planting the tree."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-subjekt",metastring:'title="Tree.subjekt"',children:'behavior Plant {\n    inputs: []\n    outputs: [\n        {\n            name: "health",\n            type: string\n        }\n    ]\n    triggers: []\n}\n'})}),"\n",(0,i.jsx)(t.h3,{id:"define-the-water-behavior",children:"Define the Water Behavior"}),"\n",(0,i.jsx)(t.p,{children:"Define the behavior for watering the tree."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-subjekt",metastring:'title="Tree.subjekt"',children:'behavior Water {\n    inputs: []\n    outputs: [\n        {\n            name: "health",\n            type: string\n        }\n    ]\n    triggers: []\n}\n'})}),"\n",(0,i.jsx)(t.h3,{id:"complete-treesubjekt-file",children:"Complete Tree.subjekt File"}),"\n",(0,i.jsxs)(t.p,{children:["Here is the complete ",(0,i.jsx)(t.code,{children:"Tree.subjekt"})," file:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-subjekt",metastring:'title="Tree.subjekt"',children:'metadata {\n    version = "0.1.0"\n    license = "MIT"\n    author = "Your Name"\n}\n\nuse "subjektify.base#State"\nuse "subjektify.base#Behavior"\n\nsubject Tree {\n    states: [\n        TreeState\n    ]\n    behaviors: [\n        Grow,\n        Water,\n        Plant\n    ]\n}\n\nstate TreeState {\n    id: string\n    age: int\n    height: float\n    health: string\n}\n\nbehavior Grow {\n    inputs: [\n        {\n            name: "growthAmount",\n            type: float\n        }\n    ]\n    outputs: [\n        {\n            name: "newHeight",\n            type: float\n        }\n    ]\n    triggers: []\n}\n\nbehavior Water {\n    inputs: []\n    outputs: [\n        {\n            name: "health",\n            type: string\n        }\n    ]\n    triggers: []\n}\n\nbehavior Plant {\n    inputs: []\n    outputs: [\n        {\n            name: "health",\n            type: string\n        }\n    ]\n    triggers: []\n}\n'})}),"\n",(0,i.jsx)(t.h2,{id:"step-3-verify-your-subject-definition",children:"Step 3: Verify Your Subject Definition"}),"\n",(0,i.jsxs)(t.p,{children:["To ensure that your subject definition is correct, use the Subjektify CLI to verify the ",(0,i.jsx)(t.code,{children:"Tree.subjekt"})," file in your root directory:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"npx subjektify verify\n"})}),"\n",(0,i.jsx)(t.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsxs)(t.p,{children:["You have now defined the ",(0,i.jsx)(t.code,{children:"Tree"})," subject with its states and behaviors. In the next tutorial, we will cover testing subjects to ensure that they function as expected."]})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>l});var i=n(6540);const s={},r=i.createContext(s);function a(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);