"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9103],{2621:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var i=s(4848),t=s(8453);const r={sidebar_position:3},l="Style Guide",a={id:"learn/subjekt/style",title:"Style Guide",description:"This document defines a style guide for Subjekt models. Following common style guide makes models easier to read.",source:"@site/docs/learn/subjekt/style.md",sourceDirName:"learn/subjekt",slug:"/learn/subjekt/style",permalink:"/docs/learn/subjekt/style",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"learnSidebar",previous:{title:"Model Validation",permalink:"/docs/learn/subjekt/validation"},next:{title:"Cheat Sheets",permalink:"/docs/learn/subjekt/cheatsheets"}},o={},d=[{value:"Guidelines",id:"guidelines",level:2},{value:"Model File",id:"model-file",level:2},{value:"Naming",id:"naming",level:2},{value:"Namespace names",id:"namespace-names",level:3},{value:"Shape names",id:"shape-names",level:3},{value:"Member names",id:"member-names",level:3},{value:"Trait names",id:"trait-names",level:3},{value:"Abbreviations",id:"abbreviations",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"style-guide",children:"Style Guide"}),"\n",(0,i.jsx)(n.p,{children:"This document defines a style guide for Subjekt models. Following common style guide makes models easier to read."}),"\n",(0,i.jsx)(n.h2,{id:"guidelines",children:"Guidelines"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Subjekt models are encoded in UTF-8."}),"\n",(0,i.jsx)(n.li,{children:"Each statement in the model should appear on its own line."}),"\n",(0,i.jsx)(n.li,{children:"All files should end with a new line."}),"\n",(0,i.jsx)(n.li,{children:"Omit semicolons entirely, unless within a string value."}),"\n",(0,i.jsx)(n.li,{children:"Omit commas everywhere except in traits or node values defined on a single line."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"model-file",children:"Model File"}),"\n",(0,i.jsxs)(n.p,{children:["Subjekt models should be authored using the ",(0,i.jsx)(n.a,{href:"../../reference/subjekt/idl",children:"Subjekt IDL"}),". Below is an example of the recommended style guide"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-subjekt",children:'metadata extenders = []\n\nuse subjekt.example.namespace\n\n/// This is a documentation\nstring MyString\n\n/// This is another documentation\n@length(min: 1, max: 100)\nstring ShortString\n\n/// Structure documentation here\n/// Preferred to be more descriptive\nstructure MyStructure {\n\n    /// Member documentation here\n    @required\n    someVariable: MyString\n}\n\n/// Custom trait documentation\n@trait(selector: "string")\nstructure myTrait { }\n'})}),"\n",(0,i.jsx)(n.h2,{id:"naming",children:"Naming"}),"\n",(0,i.jsx)(n.h3,{id:"namespace-names",children:"Namespace names"}),"\n",(0,i.jsx)(n.p,{children:"Namespace names should consist of lowercase letters, numbers, and dots. Camel case words can be used to better control namespaces."}),"\n",(0,i.jsx)(n.h3,{id:"shape-names",children:"Shape names"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Shape names use a strict form of UpperCamelCase (e.g. ",(0,i.jsx)(n.code,{children:"XmlHttpRequest"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:["Enums should use a singular noun (e.g. prefer ",(0,i.jsx)(n.code,{children:"Suit"})," over ",(0,i.jsx)(n.code,{children:"Suits"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:["Lists should use plural names (e.g. prefer ",(0,i.jsx)(n.code,{children:"Users"})," over ",(0,i.jsx)(n.code,{children:"UserList"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:["Behaviors should follow the format of ",(0,i.jsx)(n.code,{children:"VerbNoun"})," (e.g. ",(0,i.jsx)(n.code,{children:"UpdateUser"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:['Subjects should be named after the name of a subject, omitting the word "Subject" and branding when possible (e.g. prefer ',(0,i.jsx)(n.code,{children:"Composer"})," over ",(0,i.jsx)(n.code,{children:"SubjektifyComposerSubject"}),")."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"member-names",children:"Member names"}),"\n",(0,i.jsxs)(n.p,{children:["Member names use a strict form of lowerCamelCase (e.g. ",(0,i.jsx)(n.code,{children:"xmlHttpRequest"}),")."]}),"\n",(0,i.jsx)(n.h3,{id:"trait-names",children:"Trait names"}),"\n",(0,i.jsxs)(n.p,{children:["By convention, traits use lowerCamelCase (e.g. ",(0,i.jsx)(n.code,{children:"xmlHttpRequest"}),")."]}),"\n",(0,i.jsx)(n.h3,{id:"abbreviations",children:"Abbreviations"}),"\n",(0,i.jsxs)(n.p,{children:["Abbreviations are represented as normal words. For example, use ",(0,i.jsx)(n.code,{children:"XmlHttpRequest"})," instead of ",(0,i.jsx)(n.code,{children:"XMLHTTPRequest"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var i=s(6540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);