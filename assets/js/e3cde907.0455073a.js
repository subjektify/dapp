"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[487],{6147:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>r,toc:()=>u});var i=n(4848),s=n(8453);const a={sidebar_position:1},o="Quick Start",r={id:"learn/subjekt/start",title:"Quick Start",description:"This document is a tutorial that introduces the Subjekt interface definition language (IDL). By reading this tutorial, you will learn:",source:"@site/docs/learn/subjekt/start.md",sourceDirName:"learn/subjekt",slug:"/learn/subjekt/start",permalink:"/docs/learn/subjekt/start",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"learnSidebar",previous:{title:"Understanding Subjekt",permalink:"/docs/learn/subjekt/"},next:{title:"Model Validation",permalink:"/docs/learn/subjekt/validation"}},l={},u=[{value:"What is Subjekt?",id:"what-is-subjekt",level:2}];function d(e){const t={a:"a",admonition:"admonition",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"quick-start",children:"Quick Start"}),"\n",(0,i.jsx)(t.p,{children:"This document is a tutorial that introduces the Subjekt interface definition language (IDL). By reading this tutorial, you will learn:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"How to create a Subjekt model"}),"\n",(0,i.jsx)(t.li,{children:"How to define shapes, including Subjects, and contract shapes"}),"\n",(0,i.jsx)(t.li,{children:"How to apply traits to shapes"}),"\n"]}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsxs)(t.p,{children:["Download the ",(0,i.jsx)(t.a,{href:"vscode:extension/subjektify.subjekt-vscode-extension",children:"Subjekt VSCode extension"})," for a streamlined development experience."]})}),"\n",(0,i.jsx)(t.h2,{id:"what-is-subjekt",children:"What is Subjekt?"}),"\n",(0,i.jsx)(t.p,{children:"Subjekt is an interface definition language allows developers to build decentralized applications. Subjekt models define a subject as a collection of state, behaviors, and shapes. A Subjekt model enables dApp developers to generate contracts and clients in various programming languages, API documentation, test automation, and blueprints for others to use."})]})}function c(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var i=n(6540);const s={},a=i.createContext(s);function o(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);