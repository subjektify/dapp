"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3585],{8404:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var o=i(4848),n=i(8453);const s={sidebar_position:7},r="FAQ",a={id:"develop/faq",title:"FAQ",description:"Why did you develop Subjektify?",source:"@site/docs/develop/faq.md",sourceDirName:"develop",slug:"/develop/faq",permalink:"/docs/develop/faq",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"developSidebar",previous:{title:"Creating Custom Plugins",permalink:"/docs/develop/advanced/create-plugin"},next:{title:"Reference",permalink:"/docs/develop/reference/"}},l={},d=[{value:"Why did you develop Subjektify?",id:"why-did-you-develop-subjektify",level:2},{value:"Is Subjektify only for Grams?",id:"is-subjektify-only-for-grams",level:2},{value:"Why not use existing frameworks or IDLs?",id:"why-not-use-existing-frameworks-or-idls",level:2},{value:"What sets Subjektify apart from other frameworks and IDLs?",id:"what-sets-subjektify-apart-from-other-frameworks-and-idls",level:2},{value:"What does &quot;protocol-agnostic&quot; mean?",id:"what-does-protocol-agnostic-mean",level:2},{value:"Will Subjektify Support Plugins for OpenAPI and gRPC?",id:"will-subjektify-support-plugins-for-openapi-and-grpc",level:2},{value:"What can Subjektify do today?",id:"what-can-subjektify-do-today",level:2}];function c(e){const t={a:"a",h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"faq",children:"FAQ"}),"\n",(0,o.jsx)(t.h2,{id:"why-did-you-develop-subjektify",children:"Why did you develop Subjektify?"}),"\n",(0,o.jsx)(t.p,{children:"Subjektify stems from the need for a highly flexible and extensible framework tailored for decentralized application development. Our experience in the Web3 ecosystem revealed a lack of tools that could cater to the varying needs of developers without imposing rigid structures. Subjektify aims to fill this gap by offering a robust platform that prioritizes developer freedom and creativity."}),"\n",(0,o.jsx)(t.h2,{id:"is-subjektify-only-for-grams",children:"Is Subjektify only for Grams?"}),"\n",(0,o.jsx)(t.p,{children:"No, Subjektify is designed to be blockchain-agnostic. Although it integrates seamlessly with the Grams ecosystem, it can be adapted for use with any blockchain or decentralized network."}),"\n",(0,o.jsx)(t.h2,{id:"why-not-use-existing-frameworks-or-idls",children:"Why not use existing frameworks or IDLs?"}),"\n",(0,o.jsx)(t.p,{children:"While there are several frameworks and IDLs available for decentralized development, none offered the level of flexibility and extensibility that we envisioned for Subjektify. We wanted a solution that could adapt to the ever-evolving landscape of decentralized technology, rather than confining developers to a fixed set of capabilities."}),"\n",(0,o.jsx)(t.h2,{id:"what-sets-subjektify-apart-from-other-frameworks-and-idls",children:"What sets Subjektify apart from other frameworks and IDLs?"}),"\n",(0,o.jsx)(t.p,{children:'Subjektify is built with a focus on user-defined structures, known as "subjekts," which allow for customizable and reusable components. It also prioritizes:'}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Code Generation"}),": Designed for multi-language support through automated code generation."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Extensibility"}),": Incorporates a trait-based system for extending core functionalities."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Flexibility"}),": Protocol-agnostic design allows for easy adaptation to different blockchains or networks."]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"what-does-protocol-agnostic-mean",children:'What does "protocol-agnostic" mean?'}),"\n",(0,o.jsx)(t.p,{children:"Being protocol-agnostic means that Subjektify does not enforce a specific blockchain or networking protocol. It provides the scaffolding for building decentralized applications, leaving the choice of underlying technology to the developer."}),"\n",(0,o.jsx)(t.h2,{id:"will-subjektify-support-plugins-for-openapi-and-grpc",children:"Will Subjektify Support Plugins for OpenAPI and gRPC?"}),"\n",(0,o.jsx)(t.p,{children:"We are actively exploring the possibility of adding plugin support for OpenAPI and gRPC, given their widespread adoption and the benefits of interoperability."}),"\n",(0,o.jsx)(t.h2,{id:"what-can-subjektify-do-today",children:"What can Subjektify do today?"}),"\n",(0,o.jsxs)(t.p,{children:["Visit our ",(0,o.jsx)(t.a,{href:"https://github.com/subjektify/universe",children:"Subject Universe"}),"."]})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>a});var o=i(6540);const n={},s=o.createContext(n);function r(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);